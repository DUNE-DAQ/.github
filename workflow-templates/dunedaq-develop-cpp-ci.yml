name: build-develop

# Controls when the action will run.
on:
  push:
    branches: [ $default-branch ]
    paths-ignore:
      - 'docs/**'
  pull_request:
    branches: [ $default-branch ]
  schedule:
    - cron: "0 7 * * *"

  workflow_dispatch:

jobs:
  Build_against_dev_release:
    runs-on: ubuntu-latest
    container:
      image: dunedaq/sl7-minimal:dev
    defaults:
      run:
        shell: bash
    env:
      DBT_AREA_FILE: "dbt-settings"

    steps:
    - name: Checkout daq-buildtools
      uses: actions/checkout@v2
      with:
        repository: DUNE-DAQ/daq-buildtools
        path: daq-buildtools

    - name: Checkout daq-release
      uses: actions/checkout@v2
      with:
        repository: DUNE-DAQ/daq-release
        path: daq-release
        
    - name: setup dev area and checkout code
      run: |
          export REPO=$(echo '${{ github.repository }}' | awk -F '/' '{print $2}')
          export DBT_ROOT=$GITHUB_WORKSPACE/daq-buildtools
          source ${DBT_ROOT}/scripts/dbt-setup-tools.sh
          add_many_paths PATH ${DBT_ROOT}/bin ${DBT_ROOT}/scripts
          dbt-create.sh -r /releases dunedaq-develop dev
          cd dev
          cp $GITHUB_WORKSPACE/daq-release/configs/dunedaq-develop/release_manifest.sh .
          $GITHUB_WORKSPACE/daq-release/scripts/checkout-package.sh -f ./release_manifest.sh -p $REPO -b ${GITHUB_SHA} -o sourcecode
          

    - name: setup build env and build the dev release
      run: |
          export REPO=$(echo '${{ github.repository }}' | awk -F '/' '{print $2}')
          export DBT_ROOT=$GITHUB_WORKSPACE/daq-buildtools
          source ${DBT_ROOT}/scripts/dbt-setup-tools.sh
          add_many_paths PATH ${DBT_ROOT}/bin ${DBT_ROOT}/scripts
          cd $GITHUB_WORKSPACE/dev
          export DBT_AREA_ROOT=$PWD
          export DBT_AREA_FILE="dbt-settings"
          source ${DBT_AREA_ROOT}/${DBT_AREA_FILE}
          setup_ups_product_areas || true
          setup -B python ${dune_python_version} || true
          source ${DBT_AREA_ROOT}/${DBT_VENV}/bin/activate 
          setup_ups_products dune_devtools || true
          setup_ups_products dune_systems || true
          setup_ups_products dune_externals || true
          setup_ups_products dune_daqpackages || true
          setup_repo_env="SETUP_$REPO"
          [[ -z ${!setup_env_repo+x} ]] || unsetup $REPO
          export DBT_INSTALL_DIR=${DBT_AREA_ROOT}/install
          export DBT_SETUP_BUILD_ENVIRONMENT_SCRIPT_SOURCED=1
          dbt-build.sh --install
          $GITHUB_WORKSPACE/daq-release/scripts/upsify-daq-pkgs.py -w $GITHUB_WORKSPACE/dev -o /tarballs

    - name: upload UPS tarball and log file
      uses: actions/upload-artifact@v2
      with:
        name: ups_package
        path: /tarballs

    - name: upload build log file
      uses: actions/upload-artifact@v2
      with:
        name: build_log
        path: ${{ github.workspace }}/dev/log
        
